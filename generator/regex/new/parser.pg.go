// Code generated by Gopapageno; DO NOT EDIT.
package new

import "github.com/giornetta/gopapageno"

// Non-terminals
const (
	CONCATENATION_RE_SIMPLE_RE = gopapageno.TokenEmpty + 1 + iota
	NEW_AXIOM
	RE_SIMPLE_RE
	RE_UNION
	SET_ITEMS
)

// Terminals
const (
	Any = gopapageno.TokenTerm + 1 + iota
	Caret
	Char
	CharInSet
	Dash
	LPar
	Pipe
	Plus
	RPar
	SquareLPar
	SquareRPar
	Star
)

func NewParser(opts ...gopapageno.ParserOpt) *gopapageno.Parser {
	numTerminals := uint16(13)
	numNonTerminals := uint16(6)

	maxRHSLen := 6
	rules := []gopapageno.Rule{
		{NEW_AXIOM, []gopapageno.TokenType{CONCATENATION_RE_SIMPLE_RE}},
		{RE_UNION, []gopapageno.TokenType{CONCATENATION_RE_SIMPLE_RE, Pipe, CONCATENATION_RE_SIMPLE_RE}},
		{RE_UNION, []gopapageno.TokenType{CONCATENATION_RE_SIMPLE_RE, Pipe, RE_SIMPLE_RE}},
		{NEW_AXIOM, []gopapageno.TokenType{RE_SIMPLE_RE}},
		{RE_UNION, []gopapageno.TokenType{RE_SIMPLE_RE, Pipe, CONCATENATION_RE_SIMPLE_RE}},
		{RE_UNION, []gopapageno.TokenType{RE_SIMPLE_RE, Pipe, RE_SIMPLE_RE}},
		{NEW_AXIOM, []gopapageno.TokenType{RE_UNION}},
		{RE_UNION, []gopapageno.TokenType{RE_UNION, Pipe, CONCATENATION_RE_SIMPLE_RE}},
		{RE_UNION, []gopapageno.TokenType{RE_UNION, Pipe, RE_SIMPLE_RE}},
		{RE_SIMPLE_RE, []gopapageno.TokenType{Any}},
		{CONCATENATION_RE_SIMPLE_RE, []gopapageno.TokenType{Any, CONCATENATION_RE_SIMPLE_RE}},
		{CONCATENATION_RE_SIMPLE_RE, []gopapageno.TokenType{Any, RE_SIMPLE_RE}},
		{RE_SIMPLE_RE, []gopapageno.TokenType{Any, Plus}},
		{CONCATENATION_RE_SIMPLE_RE, []gopapageno.TokenType{Any, Plus, CONCATENATION_RE_SIMPLE_RE}},
		{CONCATENATION_RE_SIMPLE_RE, []gopapageno.TokenType{Any, Plus, RE_SIMPLE_RE}},
		{RE_SIMPLE_RE, []gopapageno.TokenType{Any, Star}},
		{CONCATENATION_RE_SIMPLE_RE, []gopapageno.TokenType{Any, Star, CONCATENATION_RE_SIMPLE_RE}},
		{CONCATENATION_RE_SIMPLE_RE, []gopapageno.TokenType{Any, Star, RE_SIMPLE_RE}},
		{RE_SIMPLE_RE, []gopapageno.TokenType{Char}},
		{CONCATENATION_RE_SIMPLE_RE, []gopapageno.TokenType{Char, CONCATENATION_RE_SIMPLE_RE}},
		{CONCATENATION_RE_SIMPLE_RE, []gopapageno.TokenType{Char, RE_SIMPLE_RE}},
		{RE_SIMPLE_RE, []gopapageno.TokenType{Char, Plus}},
		{CONCATENATION_RE_SIMPLE_RE, []gopapageno.TokenType{Char, Plus, CONCATENATION_RE_SIMPLE_RE}},
		{CONCATENATION_RE_SIMPLE_RE, []gopapageno.TokenType{Char, Plus, RE_SIMPLE_RE}},
		{RE_SIMPLE_RE, []gopapageno.TokenType{Char, Star}},
		{CONCATENATION_RE_SIMPLE_RE, []gopapageno.TokenType{Char, Star, CONCATENATION_RE_SIMPLE_RE}},
		{CONCATENATION_RE_SIMPLE_RE, []gopapageno.TokenType{Char, Star, RE_SIMPLE_RE}},
		{SET_ITEMS, []gopapageno.TokenType{CharInSet}},
		{SET_ITEMS, []gopapageno.TokenType{CharInSet, SET_ITEMS}},
		{SET_ITEMS, []gopapageno.TokenType{CharInSet, Dash, CharInSet}},
		{SET_ITEMS, []gopapageno.TokenType{CharInSet, Dash, CharInSet, SET_ITEMS}},
		{RE_SIMPLE_RE, []gopapageno.TokenType{LPar, CONCATENATION_RE_SIMPLE_RE, RPar}},
		{CONCATENATION_RE_SIMPLE_RE, []gopapageno.TokenType{LPar, CONCATENATION_RE_SIMPLE_RE, RPar, CONCATENATION_RE_SIMPLE_RE}},
		{CONCATENATION_RE_SIMPLE_RE, []gopapageno.TokenType{LPar, CONCATENATION_RE_SIMPLE_RE, RPar, RE_SIMPLE_RE}},
		{RE_SIMPLE_RE, []gopapageno.TokenType{LPar, CONCATENATION_RE_SIMPLE_RE, RPar, Plus}},
		{CONCATENATION_RE_SIMPLE_RE, []gopapageno.TokenType{LPar, CONCATENATION_RE_SIMPLE_RE, RPar, Plus, CONCATENATION_RE_SIMPLE_RE}},
		{CONCATENATION_RE_SIMPLE_RE, []gopapageno.TokenType{LPar, CONCATENATION_RE_SIMPLE_RE, RPar, Plus, RE_SIMPLE_RE}},
		{RE_SIMPLE_RE, []gopapageno.TokenType{LPar, CONCATENATION_RE_SIMPLE_RE, RPar, Star}},
		{CONCATENATION_RE_SIMPLE_RE, []gopapageno.TokenType{LPar, CONCATENATION_RE_SIMPLE_RE, RPar, Star, CONCATENATION_RE_SIMPLE_RE}},
		{CONCATENATION_RE_SIMPLE_RE, []gopapageno.TokenType{LPar, CONCATENATION_RE_SIMPLE_RE, RPar, Star, RE_SIMPLE_RE}},
		{RE_SIMPLE_RE, []gopapageno.TokenType{LPar, RE_SIMPLE_RE, RPar}},
		{CONCATENATION_RE_SIMPLE_RE, []gopapageno.TokenType{LPar, RE_SIMPLE_RE, RPar, CONCATENATION_RE_SIMPLE_RE}},
		{CONCATENATION_RE_SIMPLE_RE, []gopapageno.TokenType{LPar, RE_SIMPLE_RE, RPar, RE_SIMPLE_RE}},
		{RE_SIMPLE_RE, []gopapageno.TokenType{LPar, RE_SIMPLE_RE, RPar, Plus}},
		{CONCATENATION_RE_SIMPLE_RE, []gopapageno.TokenType{LPar, RE_SIMPLE_RE, RPar, Plus, CONCATENATION_RE_SIMPLE_RE}},
		{CONCATENATION_RE_SIMPLE_RE, []gopapageno.TokenType{LPar, RE_SIMPLE_RE, RPar, Plus, RE_SIMPLE_RE}},
		{RE_SIMPLE_RE, []gopapageno.TokenType{LPar, RE_SIMPLE_RE, RPar, Star}},
		{CONCATENATION_RE_SIMPLE_RE, []gopapageno.TokenType{LPar, RE_SIMPLE_RE, RPar, Star, CONCATENATION_RE_SIMPLE_RE}},
		{CONCATENATION_RE_SIMPLE_RE, []gopapageno.TokenType{LPar, RE_SIMPLE_RE, RPar, Star, RE_SIMPLE_RE}},
		{RE_SIMPLE_RE, []gopapageno.TokenType{LPar, RE_UNION, RPar}},
		{CONCATENATION_RE_SIMPLE_RE, []gopapageno.TokenType{LPar, RE_UNION, RPar, CONCATENATION_RE_SIMPLE_RE}},
		{CONCATENATION_RE_SIMPLE_RE, []gopapageno.TokenType{LPar, RE_UNION, RPar, RE_SIMPLE_RE}},
		{RE_SIMPLE_RE, []gopapageno.TokenType{LPar, RE_UNION, RPar, Plus}},
		{CONCATENATION_RE_SIMPLE_RE, []gopapageno.TokenType{LPar, RE_UNION, RPar, Plus, CONCATENATION_RE_SIMPLE_RE}},
		{CONCATENATION_RE_SIMPLE_RE, []gopapageno.TokenType{LPar, RE_UNION, RPar, Plus, RE_SIMPLE_RE}},
		{RE_SIMPLE_RE, []gopapageno.TokenType{LPar, RE_UNION, RPar, Star}},
		{CONCATENATION_RE_SIMPLE_RE, []gopapageno.TokenType{LPar, RE_UNION, RPar, Star, CONCATENATION_RE_SIMPLE_RE}},
		{CONCATENATION_RE_SIMPLE_RE, []gopapageno.TokenType{LPar, RE_UNION, RPar, Star, RE_SIMPLE_RE}},
		{RE_SIMPLE_RE, []gopapageno.TokenType{SquareLPar, SET_ITEMS, SquareRPar}},
		{CONCATENATION_RE_SIMPLE_RE, []gopapageno.TokenType{SquareLPar, SET_ITEMS, SquareRPar, CONCATENATION_RE_SIMPLE_RE}},
		{CONCATENATION_RE_SIMPLE_RE, []gopapageno.TokenType{SquareLPar, SET_ITEMS, SquareRPar, RE_SIMPLE_RE}},
		{RE_SIMPLE_RE, []gopapageno.TokenType{SquareLPar, SET_ITEMS, SquareRPar, Plus}},
		{CONCATENATION_RE_SIMPLE_RE, []gopapageno.TokenType{SquareLPar, SET_ITEMS, SquareRPar, Plus, CONCATENATION_RE_SIMPLE_RE}},
		{CONCATENATION_RE_SIMPLE_RE, []gopapageno.TokenType{SquareLPar, SET_ITEMS, SquareRPar, Plus, RE_SIMPLE_RE}},
		{RE_SIMPLE_RE, []gopapageno.TokenType{SquareLPar, SET_ITEMS, SquareRPar, Star}},
		{CONCATENATION_RE_SIMPLE_RE, []gopapageno.TokenType{SquareLPar, SET_ITEMS, SquareRPar, Star, CONCATENATION_RE_SIMPLE_RE}},
		{CONCATENATION_RE_SIMPLE_RE, []gopapageno.TokenType{SquareLPar, SET_ITEMS, SquareRPar, Star, RE_SIMPLE_RE}},
		{RE_SIMPLE_RE, []gopapageno.TokenType{SquareLPar, Caret, SET_ITEMS, SquareRPar}},
		{CONCATENATION_RE_SIMPLE_RE, []gopapageno.TokenType{SquareLPar, Caret, SET_ITEMS, SquareRPar, CONCATENATION_RE_SIMPLE_RE}},
		{CONCATENATION_RE_SIMPLE_RE, []gopapageno.TokenType{SquareLPar, Caret, SET_ITEMS, SquareRPar, RE_SIMPLE_RE}},
		{RE_SIMPLE_RE, []gopapageno.TokenType{SquareLPar, Caret, SET_ITEMS, SquareRPar, Plus}},
		{CONCATENATION_RE_SIMPLE_RE, []gopapageno.TokenType{SquareLPar, Caret, SET_ITEMS, SquareRPar, Plus, CONCATENATION_RE_SIMPLE_RE}},
		{CONCATENATION_RE_SIMPLE_RE, []gopapageno.TokenType{SquareLPar, Caret, SET_ITEMS, SquareRPar, Plus, RE_SIMPLE_RE}},
		{RE_SIMPLE_RE, []gopapageno.TokenType{SquareLPar, Caret, SET_ITEMS, SquareRPar, Star}},
		{CONCATENATION_RE_SIMPLE_RE, []gopapageno.TokenType{SquareLPar, Caret, SET_ITEMS, SquareRPar, Star, CONCATENATION_RE_SIMPLE_RE}},
		{CONCATENATION_RE_SIMPLE_RE, []gopapageno.TokenType{SquareLPar, Caret, SET_ITEMS, SquareRPar, Star, RE_SIMPLE_RE}},
	}
	compressedRules := []uint16{0, 0, 8, 1, 19, 3, 37, 4, 55, 32769, 73, 32771, 116, 32772, 159, 32774, 182, 32778, 335, 2, 0, 1, 32775, 24, 0, 0, 2, 1, 31, 3, 34, 4, 1, 0, 4, 2, 0, 2, 3, 1, 32775, 42, 0, 0, 2, 1, 49, 3, 52, 4, 4, 0, 4, 5, 0, 2, 6, 1, 32775, 60, 0, 0, 2, 1, 67, 3, 70, 4, 7, 0, 4, 8, 0, 3, 9, 4, 1, 84, 3, 87, 32776, 90, 32780, 103, 1, 10, 0, 1, 11, 0, 3, 12, 2, 1, 97, 3, 100, 1, 13, 0, 1, 14, 0, 3, 15, 2, 1, 110, 3, 113, 1, 16, 0, 1, 17, 0, 3, 18, 4, 1, 127, 3, 130, 32776, 133, 32780, 146, 1, 19, 0, 1, 20, 0, 3, 21, 2, 1, 140, 3, 143, 1, 22, 0, 1, 23, 0, 3, 24, 2, 1, 153, 3, 156, 1, 25, 0, 1, 26, 0, 5, 27, 2, 5, 166, 32773, 169, 5, 28, 0, 0, 0, 1, 32772, 174, 5, 29, 1, 5, 179, 5, 30, 0, 0, 0, 3, 1, 191, 3, 239, 4, 287, 0, 0, 1, 32777, 196, 3, 31, 4, 1, 207, 3, 210, 32776, 213, 32780, 226, 1, 32, 0, 1, 33, 0, 3, 34, 2, 1, 220, 3, 223, 1, 35, 0, 1, 36, 0, 3, 37, 2, 1, 233, 3, 236, 1, 38, 0, 1, 39, 0, 0, 0, 1, 32777, 244, 3, 40, 4, 1, 255, 3, 258, 32776, 261, 32780, 274, 1, 41, 0, 1, 42, 0, 3, 43, 2, 1, 268, 3, 271, 1, 44, 0, 1, 45, 0, 3, 46, 2, 1, 281, 3, 284, 1, 47, 0, 1, 48, 0, 0, 0, 1, 32777, 292, 3, 49, 4, 1, 303, 3, 306, 32776, 309, 32780, 322, 1, 50, 0, 1, 51, 0, 3, 52, 2, 1, 316, 3, 319, 1, 53, 0, 1, 54, 0, 3, 55, 2, 1, 329, 3, 332, 1, 56, 0, 1, 57, 0, 0, 0, 2, 5, 342, 32770, 390, 0, 0, 1, 32779, 347, 3, 58, 4, 1, 358, 3, 361, 32776, 364, 32780, 377, 1, 59, 0, 1, 60, 0, 3, 61, 2, 1, 371, 3, 374, 1, 62, 0, 1, 63, 0, 3, 64, 2, 1, 384, 3, 387, 1, 65, 0, 1, 66, 0, 0, 0, 1, 5, 395, 0, 0, 1, 32779, 400, 3, 67, 4, 1, 411, 3, 414, 32776, 417, 32780, 430, 1, 68, 0, 1, 69, 0, 3, 70, 2, 1, 424, 3, 427, 1, 71, 0, 1, 72, 0, 3, 73, 2, 1, 437, 3, 440, 1, 74, 0, 1, 75, 0}

	precMatrix := [][]gopapageno.Precedence{
		{gopapageno.PrecEquals, gopapageno.PrecYields, gopapageno.PrecYields, gopapageno.PrecYields, gopapageno.PrecYields, gopapageno.PrecYields, gopapageno.PrecYields, gopapageno.PrecYields, gopapageno.PrecYields, gopapageno.PrecYields, gopapageno.PrecYields, gopapageno.PrecYields, gopapageno.PrecYields},
		{gopapageno.PrecTakes, gopapageno.PrecYields, gopapageno.PrecEmpty, gopapageno.PrecYields, gopapageno.PrecEmpty, gopapageno.PrecEmpty, gopapageno.PrecYields, gopapageno.PrecTakes, gopapageno.PrecEquals, gopapageno.PrecTakes, gopapageno.PrecYields, gopapageno.PrecEmpty, gopapageno.PrecEquals},
		{gopapageno.PrecTakes, gopapageno.PrecEmpty, gopapageno.PrecEmpty, gopapageno.PrecEmpty, gopapageno.PrecYields, gopapageno.PrecEmpty, gopapageno.PrecEmpty, gopapageno.PrecEmpty, gopapageno.PrecEmpty, gopapageno.PrecEmpty, gopapageno.PrecEmpty, gopapageno.PrecEquals, gopapageno.PrecEmpty},
		{gopapageno.PrecTakes, gopapageno.PrecYields, gopapageno.PrecEmpty, gopapageno.PrecYields, gopapageno.PrecEmpty, gopapageno.PrecEmpty, gopapageno.PrecYields, gopapageno.PrecTakes, gopapageno.PrecEquals, gopapageno.PrecTakes, gopapageno.PrecYields, gopapageno.PrecEmpty, gopapageno.PrecEquals},
		{gopapageno.PrecTakes, gopapageno.PrecEmpty, gopapageno.PrecEmpty, gopapageno.PrecEmpty, gopapageno.PrecYields, gopapageno.PrecEquals, gopapageno.PrecEmpty, gopapageno.PrecEmpty, gopapageno.PrecEmpty, gopapageno.PrecEmpty, gopapageno.PrecEmpty, gopapageno.PrecTakes, gopapageno.PrecEmpty},
		{gopapageno.PrecTakes, gopapageno.PrecEmpty, gopapageno.PrecEmpty, gopapageno.PrecEmpty, gopapageno.PrecEquals, gopapageno.PrecEmpty, gopapageno.PrecEmpty, gopapageno.PrecEmpty, gopapageno.PrecEmpty, gopapageno.PrecEmpty, gopapageno.PrecEmpty, gopapageno.PrecEmpty, gopapageno.PrecEmpty},
		{gopapageno.PrecTakes, gopapageno.PrecYields, gopapageno.PrecEmpty, gopapageno.PrecYields, gopapageno.PrecEmpty, gopapageno.PrecEmpty, gopapageno.PrecYields, gopapageno.PrecYields, gopapageno.PrecEmpty, gopapageno.PrecEquals, gopapageno.PrecYields, gopapageno.PrecEmpty, gopapageno.PrecEmpty},
		{gopapageno.PrecTakes, gopapageno.PrecYields, gopapageno.PrecEmpty, gopapageno.PrecYields, gopapageno.PrecEmpty, gopapageno.PrecEmpty, gopapageno.PrecYields, gopapageno.PrecTakes, gopapageno.PrecEmpty, gopapageno.PrecTakes, gopapageno.PrecYields, gopapageno.PrecEmpty, gopapageno.PrecEmpty},
		{gopapageno.PrecTakes, gopapageno.PrecYields, gopapageno.PrecEmpty, gopapageno.PrecYields, gopapageno.PrecEmpty, gopapageno.PrecEmpty, gopapageno.PrecYields, gopapageno.PrecTakes, gopapageno.PrecEmpty, gopapageno.PrecTakes, gopapageno.PrecYields, gopapageno.PrecEmpty, gopapageno.PrecEmpty},
		{gopapageno.PrecTakes, gopapageno.PrecYields, gopapageno.PrecEmpty, gopapageno.PrecYields, gopapageno.PrecEmpty, gopapageno.PrecEmpty, gopapageno.PrecYields, gopapageno.PrecTakes, gopapageno.PrecEquals, gopapageno.PrecTakes, gopapageno.PrecYields, gopapageno.PrecEmpty, gopapageno.PrecEquals},
		{gopapageno.PrecTakes, gopapageno.PrecEmpty, gopapageno.PrecEquals, gopapageno.PrecEmpty, gopapageno.PrecYields, gopapageno.PrecEmpty, gopapageno.PrecEmpty, gopapageno.PrecEmpty, gopapageno.PrecEmpty, gopapageno.PrecEmpty, gopapageno.PrecEmpty, gopapageno.PrecEquals, gopapageno.PrecEmpty},
		{gopapageno.PrecTakes, gopapageno.PrecYields, gopapageno.PrecEmpty, gopapageno.PrecYields, gopapageno.PrecEmpty, gopapageno.PrecEmpty, gopapageno.PrecYields, gopapageno.PrecTakes, gopapageno.PrecEquals, gopapageno.PrecTakes, gopapageno.PrecYields, gopapageno.PrecEmpty, gopapageno.PrecEquals},
		{gopapageno.PrecTakes, gopapageno.PrecYields, gopapageno.PrecEmpty, gopapageno.PrecYields, gopapageno.PrecEmpty, gopapageno.PrecEmpty, gopapageno.PrecYields, gopapageno.PrecTakes, gopapageno.PrecEmpty, gopapageno.PrecTakes, gopapageno.PrecYields, gopapageno.PrecEmpty, gopapageno.PrecEmpty},
	}
	bitPackedMatrix := []uint64{
		14980984727966580737, 13831960122815723519, 14752790669143570427, 2755301147185181411, 3635077580152884711, 248719,
	}

	fn := func(rule uint16, lhs *gopapageno.Token, rhs []*gopapageno.Token, thread int) {
		switch rule {
		case 0:
			NEW_AXIOM0 := lhs
			CONCATENATION_RE_SIMPLE_RE1 := rhs[0]

			NEW_AXIOM0.Child = CONCATENATION_RE_SIMPLE_RE1

			{
				NEW_AXIOM0.Value = CONCATENATION_RE_SIMPLE_RE1.Value
			}
		case 1:
			RE_UNION0 := lhs
			CONCATENATION_RE_SIMPLE_RE1 := rhs[0]
			Pipe2 := rhs[1]
			CONCATENATION_RE_SIMPLE_RE3 := rhs[2]

			RE_UNION0.Child = CONCATENATION_RE_SIMPLE_RE1
			CONCATENATION_RE_SIMPLE_RE1.Next = Pipe2
			Pipe2.Next = CONCATENATION_RE_SIMPLE_RE3

			{
				leftNfa := CONCATENATION_RE_SIMPLE_RE1.Value.(*Nfa)
				rightNfa := CONCATENATION_RE_SIMPLE_RE3.Value.(*Nfa)

				leftNfa.Unite(rightNfa)

				RE_UNION0.Value = leftNfa
			}
		case 2:
			RE_UNION0 := lhs
			CONCATENATION_RE_SIMPLE_RE1 := rhs[0]
			Pipe2 := rhs[1]
			RE_SIMPLE_RE3 := rhs[2]

			RE_UNION0.Child = CONCATENATION_RE_SIMPLE_RE1
			CONCATENATION_RE_SIMPLE_RE1.Next = Pipe2
			Pipe2.Next = RE_SIMPLE_RE3

			{
				leftNfa := CONCATENATION_RE_SIMPLE_RE1.Value.(*Nfa)
				rightNfa := RE_SIMPLE_RE3.Value.(*Nfa)

				leftNfa.Unite(rightNfa)

				RE_UNION0.Value = leftNfa
			}
		case 3:
			NEW_AXIOM0 := lhs
			RE_SIMPLE_RE1 := rhs[0]

			NEW_AXIOM0.Child = RE_SIMPLE_RE1

			{
				NEW_AXIOM0.Value = RE_SIMPLE_RE1.Value
			}
		case 4:
			RE_UNION0 := lhs
			RE_SIMPLE_RE1 := rhs[0]
			Pipe2 := rhs[1]
			CONCATENATION_RE_SIMPLE_RE3 := rhs[2]

			RE_UNION0.Child = RE_SIMPLE_RE1
			RE_SIMPLE_RE1.Next = Pipe2
			Pipe2.Next = CONCATENATION_RE_SIMPLE_RE3

			{
				leftNfa := RE_SIMPLE_RE1.Value.(*Nfa)
				rightNfa := CONCATENATION_RE_SIMPLE_RE3.Value.(*Nfa)

				leftNfa.Unite(rightNfa)

				RE_UNION0.Value = leftNfa
			}
		case 5:
			RE_UNION0 := lhs
			RE_SIMPLE_RE1 := rhs[0]
			Pipe2 := rhs[1]
			RE_SIMPLE_RE3 := rhs[2]

			RE_UNION0.Child = RE_SIMPLE_RE1
			RE_SIMPLE_RE1.Next = Pipe2
			Pipe2.Next = RE_SIMPLE_RE3

			{
				leftNfa := RE_SIMPLE_RE1.Value.(*Nfa)
				rightNfa := RE_SIMPLE_RE3.Value.(*Nfa)

				leftNfa.Unite(rightNfa)

				RE_UNION0.Value = leftNfa
			}
		case 6:
			NEW_AXIOM0 := lhs
			RE_UNION1 := rhs[0]

			NEW_AXIOM0.Child = RE_UNION1

			{
				NEW_AXIOM0.Value = RE_UNION1.Value
			}
		case 7:
			RE_UNION0 := lhs
			RE_UNION1 := rhs[0]
			Pipe2 := rhs[1]
			CONCATENATION_RE_SIMPLE_RE3 := rhs[2]

			RE_UNION0.Child = RE_UNION1
			RE_UNION1.Next = Pipe2
			Pipe2.Next = CONCATENATION_RE_SIMPLE_RE3

			{
				leftNfa := RE_UNION1.Value.(*Nfa)
				rightNfa := CONCATENATION_RE_SIMPLE_RE3.Value.(*Nfa)

				leftNfa.Unite(rightNfa)

				RE_UNION0.Value = leftNfa
			}
		case 8:
			RE_UNION0 := lhs
			RE_UNION1 := rhs[0]
			Pipe2 := rhs[1]
			RE_SIMPLE_RE3 := rhs[2]

			RE_UNION0.Child = RE_UNION1
			RE_UNION1.Next = Pipe2
			Pipe2.Next = RE_SIMPLE_RE3

			{
				leftNfa := RE_UNION1.Value.(*Nfa)
				rightNfa := RE_SIMPLE_RE3.Value.(*Nfa)

				leftNfa.Unite(rightNfa)

				RE_UNION0.Value = leftNfa
			}
		case 9:
			RE_SIMPLE_RE0 := lhs
			Any1 := rhs[0]

			RE_SIMPLE_RE0.Child = Any1

			{
				RE_SIMPLE_RE0.Value = Any1.Value
			}
		case 10:
			CONCATENATION_RE_SIMPLE_RE0 := lhs
			Any1 := rhs[0]
			CONCATENATION_RE_SIMPLE_RE2 := rhs[1]

			CONCATENATION_RE_SIMPLE_RE0.Child = Any1
			Any1.Next = CONCATENATION_RE_SIMPLE_RE2

			{
				leftNfa := Any1.Value.(*Nfa)
				rightNfa := CONCATENATION_RE_SIMPLE_RE2.Value.(*Nfa)

				leftNfa.Concatenate(*rightNfa)

				CONCATENATION_RE_SIMPLE_RE0.Value = leftNfa
			}
		case 11:
			CONCATENATION_RE_SIMPLE_RE0 := lhs
			Any1 := rhs[0]
			RE_SIMPLE_RE2 := rhs[1]

			CONCATENATION_RE_SIMPLE_RE0.Child = Any1
			Any1.Next = RE_SIMPLE_RE2

			{
				leftNfa := Any1.Value.(*Nfa)
				rightNfa := RE_SIMPLE_RE2.Value.(*Nfa)

				leftNfa.Concatenate(*rightNfa)

				CONCATENATION_RE_SIMPLE_RE0.Value = leftNfa
			}
		case 12:
			RE_SIMPLE_RE0 := lhs
			Any1 := rhs[0]
			Plus2 := rhs[1]

			RE_SIMPLE_RE0.Child = Any1
			Any1.Next = Plus2

			{
				nfaAny := Any1.Value.(*Nfa)
				nfaAny.KleenePlus()

				RE_SIMPLE_RE0.Value = nfaAny
			}
		case 13:
			CONCATENATION_RE_SIMPLE_RE0 := lhs
			Any1 := rhs[0]
			Plus2 := rhs[1]
			CONCATENATION_RE_SIMPLE_RE3 := rhs[2]

			CONCATENATION_RE_SIMPLE_RE0.Child = Any1
			Any1.Next = Plus2
			Plus2.Next = CONCATENATION_RE_SIMPLE_RE3

			{
				nfaAny := Any1.Value.(*Nfa)
				nfaAny.KleenePlus()
				rightNfa := CONCATENATION_RE_SIMPLE_RE3.Value.(*Nfa)

				nfaAny.Concatenate(*rightNfa)

				CONCATENATION_RE_SIMPLE_RE0.Value = nfaAny
			}
		case 14:
			CONCATENATION_RE_SIMPLE_RE0 := lhs
			Any1 := rhs[0]
			Plus2 := rhs[1]
			RE_SIMPLE_RE3 := rhs[2]

			CONCATENATION_RE_SIMPLE_RE0.Child = Any1
			Any1.Next = Plus2
			Plus2.Next = RE_SIMPLE_RE3

			{
				nfaAny := Any1.Value.(*Nfa)
				nfaAny.KleenePlus()
				rightNfa := RE_SIMPLE_RE3.Value.(*Nfa)

				nfaAny.Concatenate(*rightNfa)

				CONCATENATION_RE_SIMPLE_RE0.Value = nfaAny
			}
		case 15:
			RE_SIMPLE_RE0 := lhs
			Any1 := rhs[0]
			Star2 := rhs[1]

			RE_SIMPLE_RE0.Child = Any1
			Any1.Next = Star2

			{
				nfaAny := Any1.Value.(*Nfa)
				nfaAny.KleeneStar()

				RE_SIMPLE_RE0.Value = nfaAny
			}
		case 16:
			CONCATENATION_RE_SIMPLE_RE0 := lhs
			Any1 := rhs[0]
			Star2 := rhs[1]
			CONCATENATION_RE_SIMPLE_RE3 := rhs[2]

			CONCATENATION_RE_SIMPLE_RE0.Child = Any1
			Any1.Next = Star2
			Star2.Next = CONCATENATION_RE_SIMPLE_RE3

			{
				nfaAny := Any1.Value.(*Nfa)
				nfaAny.KleeneStar()
				rightNfa := CONCATENATION_RE_SIMPLE_RE3.Value.(*Nfa)

				nfaAny.Concatenate(*rightNfa)

				CONCATENATION_RE_SIMPLE_RE0.Value = nfaAny
			}
		case 17:
			CONCATENATION_RE_SIMPLE_RE0 := lhs
			Any1 := rhs[0]
			Star2 := rhs[1]
			RE_SIMPLE_RE3 := rhs[2]

			CONCATENATION_RE_SIMPLE_RE0.Child = Any1
			Any1.Next = Star2
			Star2.Next = RE_SIMPLE_RE3

			{
				nfaAny := Any1.Value.(*Nfa)
				nfaAny.KleeneStar()
				rightNfa := RE_SIMPLE_RE3.Value.(*Nfa)

				nfaAny.Concatenate(*rightNfa)

				CONCATENATION_RE_SIMPLE_RE0.Value = nfaAny
			}
		case 18:
			RE_SIMPLE_RE0 := lhs
			Char1 := rhs[0]

			RE_SIMPLE_RE0.Child = Char1

			{
				newNfa := newNfaFromChar(Char1.Value.(byte))

				RE_SIMPLE_RE0.Value = &newNfa
			}
		case 19:
			CONCATENATION_RE_SIMPLE_RE0 := lhs
			Char1 := rhs[0]
			CONCATENATION_RE_SIMPLE_RE2 := rhs[1]

			CONCATENATION_RE_SIMPLE_RE0.Child = Char1
			Char1.Next = CONCATENATION_RE_SIMPLE_RE2

			{
				newNfa := newNfaFromChar(Char1.Value.(byte))
				rightNfa := CONCATENATION_RE_SIMPLE_RE2.Value.(*Nfa)

				newNfa.Concatenate(*rightNfa)

				CONCATENATION_RE_SIMPLE_RE0.Value = &newNfa
			}
		case 20:
			CONCATENATION_RE_SIMPLE_RE0 := lhs
			Char1 := rhs[0]
			RE_SIMPLE_RE2 := rhs[1]

			CONCATENATION_RE_SIMPLE_RE0.Child = Char1
			Char1.Next = RE_SIMPLE_RE2

			{
				newNfa := newNfaFromChar(Char1.Value.(byte))
				rightNfa := RE_SIMPLE_RE2.Value.(*Nfa)

				newNfa.Concatenate(*rightNfa)

				CONCATENATION_RE_SIMPLE_RE0.Value = &newNfa
			}
		case 21:
			RE_SIMPLE_RE0 := lhs
			Char1 := rhs[0]
			Plus2 := rhs[1]

			RE_SIMPLE_RE0.Child = Char1
			Char1.Next = Plus2

			{
				newNfa := newNfaFromChar(Char1.Value.(byte))
				newNfa.KleenePlus()

				RE_SIMPLE_RE0.Value = &newNfa
			}
		case 22:
			CONCATENATION_RE_SIMPLE_RE0 := lhs
			Char1 := rhs[0]
			Plus2 := rhs[1]
			CONCATENATION_RE_SIMPLE_RE3 := rhs[2]

			CONCATENATION_RE_SIMPLE_RE0.Child = Char1
			Char1.Next = Plus2
			Plus2.Next = CONCATENATION_RE_SIMPLE_RE3

			{
				newNfa := newNfaFromChar(Char1.Value.(byte))
				newNfa.KleenePlus()
				rightNfa := Plus2.Value.(*Nfa)

				newNfa.Concatenate(*rightNfa)

				CONCATENATION_RE_SIMPLE_RE0.Value = &newNfa
			}
		case 23:
			CONCATENATION_RE_SIMPLE_RE0 := lhs
			Char1 := rhs[0]
			Plus2 := rhs[1]
			RE_SIMPLE_RE3 := rhs[2]

			CONCATENATION_RE_SIMPLE_RE0.Child = Char1
			Char1.Next = Plus2
			Plus2.Next = RE_SIMPLE_RE3

			{
				newNfa := newNfaFromChar(Char1.Value.(byte))
				newNfa.KleenePlus()
				rightNfa := Plus2.Value.(*Nfa)

				newNfa.Concatenate(*rightNfa)

				CONCATENATION_RE_SIMPLE_RE0.Value = &newNfa
			}
		case 24:
			RE_SIMPLE_RE0 := lhs
			Char1 := rhs[0]
			Star2 := rhs[1]

			RE_SIMPLE_RE0.Child = Char1
			Char1.Next = Star2

			{
				newNfa := newNfaFromChar(Char1.Value.(byte))
				newNfa.KleeneStar()

				RE_SIMPLE_RE0.Value = &newNfa
			}
		case 25:
			CONCATENATION_RE_SIMPLE_RE0 := lhs
			Char1 := rhs[0]
			Star2 := rhs[1]
			CONCATENATION_RE_SIMPLE_RE3 := rhs[2]

			CONCATENATION_RE_SIMPLE_RE0.Child = Char1
			Char1.Next = Star2
			Star2.Next = CONCATENATION_RE_SIMPLE_RE3

			{
				newNfa := newNfaFromChar(Char1.Value.(byte))
				newNfa.KleeneStar()
				rightNfa := Star2.Value.(*Nfa)

				newNfa.Concatenate(*rightNfa)

				CONCATENATION_RE_SIMPLE_RE0.Value = &newNfa
			}
		case 26:
			CONCATENATION_RE_SIMPLE_RE0 := lhs
			Char1 := rhs[0]
			Star2 := rhs[1]
			RE_SIMPLE_RE3 := rhs[2]

			CONCATENATION_RE_SIMPLE_RE0.Child = Char1
			Char1.Next = Star2
			Star2.Next = RE_SIMPLE_RE3

			{
				newNfa := newNfaFromChar(Char1.Value.(byte))
				newNfa.KleeneStar()
				rightNfa := Star2.Value.(*Nfa)

				newNfa.Concatenate(*rightNfa)

				CONCATENATION_RE_SIMPLE_RE0.Value = &newNfa
			}
		case 27:
			SET_ITEMS0 := lhs
			CharInSet1 := rhs[0]

			SET_ITEMS0.Child = CharInSet1

			{
				var charSet [256]bool
				charSet[CharInSet1.Value.(byte)] = true

				SET_ITEMS0.Value = charSet
			}
		case 28:
			SET_ITEMS0 := lhs
			CharInSet1 := rhs[0]
			SET_ITEMS2 := rhs[1]

			SET_ITEMS0.Child = CharInSet1
			CharInSet1.Next = SET_ITEMS2

			{
				charSet := SET_ITEMS2.Value.([256]bool)
				charSet[CharInSet1.Value.(byte)] = true

				SET_ITEMS0.Value = charSet
			}
		case 29:
			SET_ITEMS0 := lhs
			CharInSet1 := rhs[0]
			Dash2 := rhs[1]
			CharInSet3 := rhs[2]

			SET_ITEMS0.Child = CharInSet1
			CharInSet1.Next = Dash2
			Dash2.Next = CharInSet3

			{
				charStart := CharInSet1.Value.(byte)
				charEnd := CharInSet3.Value.(byte)

				if charStart > charEnd {
					temp := charStart
					charStart = charEnd
					charEnd = temp
				}

				var charSet [256]bool
				for i := charStart; i <= charEnd; i++ {
					charSet[i] = true
				}

				SET_ITEMS0.Value = charSet
			}
		case 30:
			SET_ITEMS0 := lhs
			CharInSet1 := rhs[0]
			Dash2 := rhs[1]
			CharInSet3 := rhs[2]
			SET_ITEMS4 := rhs[3]

			SET_ITEMS0.Child = CharInSet1
			CharInSet1.Next = Dash2
			Dash2.Next = CharInSet3
			CharInSet3.Next = SET_ITEMS4

			{
				charStart := CharInSet1.Value.(byte)
				charEnd := CharInSet3.Value.(byte)
				charSet := SET_ITEMS4.Value.([256]bool)

				if charStart > charEnd {
					temp := charStart
					charStart = charEnd
					charEnd = temp
				}

				for i := charStart; i <= charEnd; i++ {
					charSet[i] = true
				}

				SET_ITEMS0.Value = charSet
			}
		case 31:
			RE_SIMPLE_RE0 := lhs
			LPar1 := rhs[0]
			CONCATENATION_RE_SIMPLE_RE2 := rhs[1]
			RPar3 := rhs[2]

			RE_SIMPLE_RE0.Child = LPar1
			LPar1.Next = CONCATENATION_RE_SIMPLE_RE2
			CONCATENATION_RE_SIMPLE_RE2.Next = RPar3

			{
				RE_SIMPLE_RE0.Value = CONCATENATION_RE_SIMPLE_RE2.Value
			}
		case 32:
			CONCATENATION_RE_SIMPLE_RE0 := lhs
			LPar1 := rhs[0]
			CONCATENATION_RE_SIMPLE_RE2 := rhs[1]
			RPar3 := rhs[2]
			CONCATENATION_RE_SIMPLE_RE4 := rhs[3]

			CONCATENATION_RE_SIMPLE_RE0.Child = LPar1
			LPar1.Next = CONCATENATION_RE_SIMPLE_RE2
			CONCATENATION_RE_SIMPLE_RE2.Next = RPar3
			RPar3.Next = CONCATENATION_RE_SIMPLE_RE4

			{
				nfaEnclosed := CONCATENATION_RE_SIMPLE_RE2.Value.(*Nfa)
				rightNfa := CONCATENATION_RE_SIMPLE_RE4.Value.(*Nfa)

				nfaEnclosed.Concatenate(*rightNfa)

				CONCATENATION_RE_SIMPLE_RE0.Value = nfaEnclosed
			}
		case 33:
			CONCATENATION_RE_SIMPLE_RE0 := lhs
			LPar1 := rhs[0]
			CONCATENATION_RE_SIMPLE_RE2 := rhs[1]
			RPar3 := rhs[2]
			RE_SIMPLE_RE4 := rhs[3]

			CONCATENATION_RE_SIMPLE_RE0.Child = LPar1
			LPar1.Next = CONCATENATION_RE_SIMPLE_RE2
			CONCATENATION_RE_SIMPLE_RE2.Next = RPar3
			RPar3.Next = RE_SIMPLE_RE4

			{
				nfaEnclosed := CONCATENATION_RE_SIMPLE_RE2.Value.(*Nfa)
				rightNfa := RE_SIMPLE_RE4.Value.(*Nfa)

				nfaEnclosed.Concatenate(*rightNfa)

				CONCATENATION_RE_SIMPLE_RE0.Value = nfaEnclosed
			}
		case 34:
			RE_SIMPLE_RE0 := lhs
			LPar1 := rhs[0]
			CONCATENATION_RE_SIMPLE_RE2 := rhs[1]
			RPar3 := rhs[2]
			Plus4 := rhs[3]

			RE_SIMPLE_RE0.Child = LPar1
			LPar1.Next = CONCATENATION_RE_SIMPLE_RE2
			CONCATENATION_RE_SIMPLE_RE2.Next = RPar3
			RPar3.Next = Plus4

			{
				nfaEnclosed := CONCATENATION_RE_SIMPLE_RE2.Value.(*Nfa)

				nfaEnclosed.KleenePlus()

				RE_SIMPLE_RE0.Value = nfaEnclosed
			}
		case 35:
			CONCATENATION_RE_SIMPLE_RE0 := lhs
			LPar1 := rhs[0]
			CONCATENATION_RE_SIMPLE_RE2 := rhs[1]
			RPar3 := rhs[2]
			Plus4 := rhs[3]
			CONCATENATION_RE_SIMPLE_RE5 := rhs[4]

			CONCATENATION_RE_SIMPLE_RE0.Child = LPar1
			LPar1.Next = CONCATENATION_RE_SIMPLE_RE2
			CONCATENATION_RE_SIMPLE_RE2.Next = RPar3
			RPar3.Next = Plus4
			Plus4.Next = CONCATENATION_RE_SIMPLE_RE5

			{
				nfaEnclosed := CONCATENATION_RE_SIMPLE_RE2.Value.(*Nfa)
				nfaEnclosed.KleenePlus()
				rightNfa := CONCATENATION_RE_SIMPLE_RE5.Value.(*Nfa)

				nfaEnclosed.Concatenate(*rightNfa)

				CONCATENATION_RE_SIMPLE_RE0.Value = nfaEnclosed
			}
		case 36:
			CONCATENATION_RE_SIMPLE_RE0 := lhs
			LPar1 := rhs[0]
			CONCATENATION_RE_SIMPLE_RE2 := rhs[1]
			RPar3 := rhs[2]
			Plus4 := rhs[3]
			RE_SIMPLE_RE5 := rhs[4]

			CONCATENATION_RE_SIMPLE_RE0.Child = LPar1
			LPar1.Next = CONCATENATION_RE_SIMPLE_RE2
			CONCATENATION_RE_SIMPLE_RE2.Next = RPar3
			RPar3.Next = Plus4
			Plus4.Next = RE_SIMPLE_RE5

			{
				nfaEnclosed := CONCATENATION_RE_SIMPLE_RE2.Value.(*Nfa)
				nfaEnclosed.KleenePlus()
				rightNfa := RE_SIMPLE_RE5.Value.(*Nfa)

				nfaEnclosed.Concatenate(*rightNfa)

				CONCATENATION_RE_SIMPLE_RE0.Value = nfaEnclosed
			}
		case 37:
			RE_SIMPLE_RE0 := lhs
			LPar1 := rhs[0]
			CONCATENATION_RE_SIMPLE_RE2 := rhs[1]
			RPar3 := rhs[2]
			Star4 := rhs[3]

			RE_SIMPLE_RE0.Child = LPar1
			LPar1.Next = CONCATENATION_RE_SIMPLE_RE2
			CONCATENATION_RE_SIMPLE_RE2.Next = RPar3
			RPar3.Next = Star4

			{
				nfaEnclosed := CONCATENATION_RE_SIMPLE_RE2.Value.(*Nfa)

				nfaEnclosed.KleeneStar()

				RE_SIMPLE_RE0.Value = nfaEnclosed
			}
		case 38:
			CONCATENATION_RE_SIMPLE_RE0 := lhs
			LPar1 := rhs[0]
			CONCATENATION_RE_SIMPLE_RE2 := rhs[1]
			RPar3 := rhs[2]
			Star4 := rhs[3]
			CONCATENATION_RE_SIMPLE_RE5 := rhs[4]

			CONCATENATION_RE_SIMPLE_RE0.Child = LPar1
			LPar1.Next = CONCATENATION_RE_SIMPLE_RE2
			CONCATENATION_RE_SIMPLE_RE2.Next = RPar3
			RPar3.Next = Star4
			Star4.Next = CONCATENATION_RE_SIMPLE_RE5

			{
				nfaEnclosed := CONCATENATION_RE_SIMPLE_RE2.Value.(*Nfa)
				nfaEnclosed.KleeneStar()
				rightNfa := CONCATENATION_RE_SIMPLE_RE5.Value.(*Nfa)

				nfaEnclosed.Concatenate(*rightNfa)

				CONCATENATION_RE_SIMPLE_RE0.Value = nfaEnclosed
			}
		case 39:
			CONCATENATION_RE_SIMPLE_RE0 := lhs
			LPar1 := rhs[0]
			CONCATENATION_RE_SIMPLE_RE2 := rhs[1]
			RPar3 := rhs[2]
			Star4 := rhs[3]
			RE_SIMPLE_RE5 := rhs[4]

			CONCATENATION_RE_SIMPLE_RE0.Child = LPar1
			LPar1.Next = CONCATENATION_RE_SIMPLE_RE2
			CONCATENATION_RE_SIMPLE_RE2.Next = RPar3
			RPar3.Next = Star4
			Star4.Next = RE_SIMPLE_RE5

			{
				nfaEnclosed := CONCATENATION_RE_SIMPLE_RE2.Value.(*Nfa)
				nfaEnclosed.KleeneStar()
				rightNfa := RE_SIMPLE_RE5.Value.(*Nfa)

				nfaEnclosed.Concatenate(*rightNfa)

				CONCATENATION_RE_SIMPLE_RE0.Value = nfaEnclosed
			}
		case 40:
			RE_SIMPLE_RE0 := lhs
			LPar1 := rhs[0]
			RE_SIMPLE_RE2 := rhs[1]
			RPar3 := rhs[2]

			RE_SIMPLE_RE0.Child = LPar1
			LPar1.Next = RE_SIMPLE_RE2
			RE_SIMPLE_RE2.Next = RPar3

			{
				RE_SIMPLE_RE0.Value = RE_SIMPLE_RE2.Value
			}
		case 41:
			CONCATENATION_RE_SIMPLE_RE0 := lhs
			LPar1 := rhs[0]
			RE_SIMPLE_RE2 := rhs[1]
			RPar3 := rhs[2]
			CONCATENATION_RE_SIMPLE_RE4 := rhs[3]

			CONCATENATION_RE_SIMPLE_RE0.Child = LPar1
			LPar1.Next = RE_SIMPLE_RE2
			RE_SIMPLE_RE2.Next = RPar3
			RPar3.Next = CONCATENATION_RE_SIMPLE_RE4

			{
				nfaEnclosed := RE_SIMPLE_RE2.Value.(*Nfa)
				rightNfa := CONCATENATION_RE_SIMPLE_RE4.Value.(*Nfa)

				nfaEnclosed.Concatenate(*rightNfa)

				CONCATENATION_RE_SIMPLE_RE0.Value = nfaEnclosed
			}
		case 42:
			CONCATENATION_RE_SIMPLE_RE0 := lhs
			LPar1 := rhs[0]
			RE_SIMPLE_RE2 := rhs[1]
			RPar3 := rhs[2]
			RE_SIMPLE_RE4 := rhs[3]

			CONCATENATION_RE_SIMPLE_RE0.Child = LPar1
			LPar1.Next = RE_SIMPLE_RE2
			RE_SIMPLE_RE2.Next = RPar3
			RPar3.Next = RE_SIMPLE_RE4

			{
				nfaEnclosed := RE_SIMPLE_RE2.Value.(*Nfa)
				rightNfa := RE_SIMPLE_RE4.Value.(*Nfa)

				nfaEnclosed.Concatenate(*rightNfa)

				CONCATENATION_RE_SIMPLE_RE0.Value = nfaEnclosed
			}
		case 43:
			RE_SIMPLE_RE0 := lhs
			LPar1 := rhs[0]
			RE_SIMPLE_RE2 := rhs[1]
			RPar3 := rhs[2]
			Plus4 := rhs[3]

			RE_SIMPLE_RE0.Child = LPar1
			LPar1.Next = RE_SIMPLE_RE2
			RE_SIMPLE_RE2.Next = RPar3
			RPar3.Next = Plus4

			{
				nfaEnclosed := RE_SIMPLE_RE2.Value.(*Nfa)

				nfaEnclosed.KleenePlus()

				RE_SIMPLE_RE0.Value = nfaEnclosed
			}
		case 44:
			CONCATENATION_RE_SIMPLE_RE0 := lhs
			LPar1 := rhs[0]
			RE_SIMPLE_RE2 := rhs[1]
			RPar3 := rhs[2]
			Plus4 := rhs[3]
			CONCATENATION_RE_SIMPLE_RE5 := rhs[4]

			CONCATENATION_RE_SIMPLE_RE0.Child = LPar1
			LPar1.Next = RE_SIMPLE_RE2
			RE_SIMPLE_RE2.Next = RPar3
			RPar3.Next = Plus4
			Plus4.Next = CONCATENATION_RE_SIMPLE_RE5

			{
				nfaEnclosed := RE_SIMPLE_RE2.Value.(*Nfa)
				nfaEnclosed.KleenePlus()
				rightNfa := CONCATENATION_RE_SIMPLE_RE5.Value.(*Nfa)

				nfaEnclosed.Concatenate(*rightNfa)

				CONCATENATION_RE_SIMPLE_RE0.Value = nfaEnclosed
			}
		case 45:
			CONCATENATION_RE_SIMPLE_RE0 := lhs
			LPar1 := rhs[0]
			RE_SIMPLE_RE2 := rhs[1]
			RPar3 := rhs[2]
			Plus4 := rhs[3]
			RE_SIMPLE_RE5 := rhs[4]

			CONCATENATION_RE_SIMPLE_RE0.Child = LPar1
			LPar1.Next = RE_SIMPLE_RE2
			RE_SIMPLE_RE2.Next = RPar3
			RPar3.Next = Plus4
			Plus4.Next = RE_SIMPLE_RE5

			{
				nfaEnclosed := RE_SIMPLE_RE2.Value.(*Nfa)
				nfaEnclosed.KleenePlus()
				rightNfa := RE_SIMPLE_RE5.Value.(*Nfa)

				nfaEnclosed.Concatenate(*rightNfa)

				CONCATENATION_RE_SIMPLE_RE0.Value = nfaEnclosed
			}
		case 46:
			RE_SIMPLE_RE0 := lhs
			LPar1 := rhs[0]
			RE_SIMPLE_RE2 := rhs[1]
			RPar3 := rhs[2]
			Star4 := rhs[3]

			RE_SIMPLE_RE0.Child = LPar1
			LPar1.Next = RE_SIMPLE_RE2
			RE_SIMPLE_RE2.Next = RPar3
			RPar3.Next = Star4

			{
				nfaEnclosed := RE_SIMPLE_RE2.Value.(*Nfa)

				nfaEnclosed.KleeneStar()

				RE_SIMPLE_RE0.Value = nfaEnclosed
			}
		case 47:
			CONCATENATION_RE_SIMPLE_RE0 := lhs
			LPar1 := rhs[0]
			RE_SIMPLE_RE2 := rhs[1]
			RPar3 := rhs[2]
			Star4 := rhs[3]
			CONCATENATION_RE_SIMPLE_RE5 := rhs[4]

			CONCATENATION_RE_SIMPLE_RE0.Child = LPar1
			LPar1.Next = RE_SIMPLE_RE2
			RE_SIMPLE_RE2.Next = RPar3
			RPar3.Next = Star4
			Star4.Next = CONCATENATION_RE_SIMPLE_RE5

			{
				nfaEnclosed := RE_SIMPLE_RE2.Value.(*Nfa)
				nfaEnclosed.KleeneStar()
				rightNfa := CONCATENATION_RE_SIMPLE_RE5.Value.(*Nfa)

				nfaEnclosed.Concatenate(*rightNfa)

				CONCATENATION_RE_SIMPLE_RE0.Value = nfaEnclosed
			}
		case 48:
			CONCATENATION_RE_SIMPLE_RE0 := lhs
			LPar1 := rhs[0]
			RE_SIMPLE_RE2 := rhs[1]
			RPar3 := rhs[2]
			Star4 := rhs[3]
			RE_SIMPLE_RE5 := rhs[4]

			CONCATENATION_RE_SIMPLE_RE0.Child = LPar1
			LPar1.Next = RE_SIMPLE_RE2
			RE_SIMPLE_RE2.Next = RPar3
			RPar3.Next = Star4
			Star4.Next = RE_SIMPLE_RE5

			{
				nfaEnclosed := RE_SIMPLE_RE2.Value.(*Nfa)
				nfaEnclosed.KleeneStar()
				rightNfa := RE_SIMPLE_RE5.Value.(*Nfa)

				nfaEnclosed.Concatenate(*rightNfa)

				CONCATENATION_RE_SIMPLE_RE0.Value = nfaEnclosed
			}
		case 49:
			RE_SIMPLE_RE0 := lhs
			LPar1 := rhs[0]
			RE_UNION2 := rhs[1]
			RPar3 := rhs[2]

			RE_SIMPLE_RE0.Child = LPar1
			LPar1.Next = RE_UNION2
			RE_UNION2.Next = RPar3

			{
				RE_SIMPLE_RE0.Value = RE_UNION2.Value
			}
		case 50:
			CONCATENATION_RE_SIMPLE_RE0 := lhs
			LPar1 := rhs[0]
			RE_UNION2 := rhs[1]
			RPar3 := rhs[2]
			CONCATENATION_RE_SIMPLE_RE4 := rhs[3]

			CONCATENATION_RE_SIMPLE_RE0.Child = LPar1
			LPar1.Next = RE_UNION2
			RE_UNION2.Next = RPar3
			RPar3.Next = CONCATENATION_RE_SIMPLE_RE4

			{
				nfaEnclosed := RE_UNION2.Value.(*Nfa)
				rightNfa := CONCATENATION_RE_SIMPLE_RE4.Value.(*Nfa)

				nfaEnclosed.Concatenate(*rightNfa)

				CONCATENATION_RE_SIMPLE_RE0.Value = nfaEnclosed
			}
		case 51:
			CONCATENATION_RE_SIMPLE_RE0 := lhs
			LPar1 := rhs[0]
			RE_UNION2 := rhs[1]
			RPar3 := rhs[2]
			RE_SIMPLE_RE4 := rhs[3]

			CONCATENATION_RE_SIMPLE_RE0.Child = LPar1
			LPar1.Next = RE_UNION2
			RE_UNION2.Next = RPar3
			RPar3.Next = RE_SIMPLE_RE4

			{
				nfaEnclosed := RE_UNION2.Value.(*Nfa)
				rightNfa := RE_SIMPLE_RE4.Value.(*Nfa)

				nfaEnclosed.Concatenate(*rightNfa)

				CONCATENATION_RE_SIMPLE_RE0.Value = nfaEnclosed
			}
		case 52:
			RE_SIMPLE_RE0 := lhs
			LPar1 := rhs[0]
			RE_UNION2 := rhs[1]
			RPar3 := rhs[2]
			Plus4 := rhs[3]

			RE_SIMPLE_RE0.Child = LPar1
			LPar1.Next = RE_UNION2
			RE_UNION2.Next = RPar3
			RPar3.Next = Plus4

			{
				nfaEnclosed := RE_UNION2.Value.(*Nfa)

				nfaEnclosed.KleenePlus()

				RE_SIMPLE_RE0.Value = nfaEnclosed
			}
		case 53:
			CONCATENATION_RE_SIMPLE_RE0 := lhs
			LPar1 := rhs[0]
			RE_UNION2 := rhs[1]
			RPar3 := rhs[2]
			Plus4 := rhs[3]
			CONCATENATION_RE_SIMPLE_RE5 := rhs[4]

			CONCATENATION_RE_SIMPLE_RE0.Child = LPar1
			LPar1.Next = RE_UNION2
			RE_UNION2.Next = RPar3
			RPar3.Next = Plus4
			Plus4.Next = CONCATENATION_RE_SIMPLE_RE5

			{
				nfaEnclosed := RE_UNION2.Value.(*Nfa)
				nfaEnclosed.KleenePlus()
				rightNfa := CONCATENATION_RE_SIMPLE_RE5.Value.(*Nfa)

				nfaEnclosed.Concatenate(*rightNfa)

				CONCATENATION_RE_SIMPLE_RE0.Value = nfaEnclosed
			}
		case 54:
			CONCATENATION_RE_SIMPLE_RE0 := lhs
			LPar1 := rhs[0]
			RE_UNION2 := rhs[1]
			RPar3 := rhs[2]
			Plus4 := rhs[3]
			RE_SIMPLE_RE5 := rhs[4]

			CONCATENATION_RE_SIMPLE_RE0.Child = LPar1
			LPar1.Next = RE_UNION2
			RE_UNION2.Next = RPar3
			RPar3.Next = Plus4
			Plus4.Next = RE_SIMPLE_RE5

			{
				nfaEnclosed := RE_UNION2.Value.(*Nfa)
				nfaEnclosed.KleenePlus()
				rightNfa := RE_SIMPLE_RE5.Value.(*Nfa)

				nfaEnclosed.Concatenate(*rightNfa)

				CONCATENATION_RE_SIMPLE_RE0.Value = nfaEnclosed
			}
		case 55:
			RE_SIMPLE_RE0 := lhs
			LPar1 := rhs[0]
			RE_UNION2 := rhs[1]
			RPar3 := rhs[2]
			Star4 := rhs[3]

			RE_SIMPLE_RE0.Child = LPar1
			LPar1.Next = RE_UNION2
			RE_UNION2.Next = RPar3
			RPar3.Next = Star4

			{
				nfaEnclosed := RE_UNION2.Value.(*Nfa)

				nfaEnclosed.KleeneStar()

				RE_SIMPLE_RE0.Value = nfaEnclosed
			}
		case 56:
			CONCATENATION_RE_SIMPLE_RE0 := lhs
			LPar1 := rhs[0]
			RE_UNION2 := rhs[1]
			RPar3 := rhs[2]
			Star4 := rhs[3]
			CONCATENATION_RE_SIMPLE_RE5 := rhs[4]

			CONCATENATION_RE_SIMPLE_RE0.Child = LPar1
			LPar1.Next = RE_UNION2
			RE_UNION2.Next = RPar3
			RPar3.Next = Star4
			Star4.Next = CONCATENATION_RE_SIMPLE_RE5

			{
				nfaEnclosed := RE_UNION2.Value.(*Nfa)
				nfaEnclosed.KleeneStar()
				rightNfa := CONCATENATION_RE_SIMPLE_RE5.Value.(*Nfa)

				nfaEnclosed.Concatenate(*rightNfa)

				CONCATENATION_RE_SIMPLE_RE0.Value = nfaEnclosed
			}
		case 57:
			CONCATENATION_RE_SIMPLE_RE0 := lhs
			LPar1 := rhs[0]
			RE_UNION2 := rhs[1]
			RPar3 := rhs[2]
			Star4 := rhs[3]
			RE_SIMPLE_RE5 := rhs[4]

			CONCATENATION_RE_SIMPLE_RE0.Child = LPar1
			LPar1.Next = RE_UNION2
			RE_UNION2.Next = RPar3
			RPar3.Next = Star4
			Star4.Next = RE_SIMPLE_RE5

			{
				nfaEnclosed := RE_UNION2.Value.(*Nfa)
				nfaEnclosed.KleeneStar()
				rightNfa := RE_SIMPLE_RE5.Value.(*Nfa)

				nfaEnclosed.Concatenate(*rightNfa)

				CONCATENATION_RE_SIMPLE_RE0.Value = nfaEnclosed
			}
		case 58:
			RE_SIMPLE_RE0 := lhs
			SquareLPar1 := rhs[0]
			SET_ITEMS2 := rhs[1]
			SquareRPar3 := rhs[2]

			RE_SIMPLE_RE0.Child = SquareLPar1
			SquareLPar1.Next = SET_ITEMS2
			SET_ITEMS2.Next = SquareRPar3

			{
				newNfa := newNfaFromCharClass(SET_ITEMS2.Value.([256]bool))

				RE_SIMPLE_RE0.Value = &newNfa
			}
		case 59:
			CONCATENATION_RE_SIMPLE_RE0 := lhs
			SquareLPar1 := rhs[0]
			SET_ITEMS2 := rhs[1]
			SquareRPar3 := rhs[2]
			CONCATENATION_RE_SIMPLE_RE4 := rhs[3]

			CONCATENATION_RE_SIMPLE_RE0.Child = SquareLPar1
			SquareLPar1.Next = SET_ITEMS2
			SET_ITEMS2.Next = SquareRPar3
			SquareRPar3.Next = CONCATENATION_RE_SIMPLE_RE4

			{
				newNfa := newNfaFromCharClass(SET_ITEMS2.Value.([256]bool))
				rightNfa := CONCATENATION_RE_SIMPLE_RE4.Value.(*Nfa)

				newNfa.Concatenate(*rightNfa)

				CONCATENATION_RE_SIMPLE_RE0.Value = &newNfa
			}
		case 60:
			CONCATENATION_RE_SIMPLE_RE0 := lhs
			SquareLPar1 := rhs[0]
			SET_ITEMS2 := rhs[1]
			SquareRPar3 := rhs[2]
			RE_SIMPLE_RE4 := rhs[3]

			CONCATENATION_RE_SIMPLE_RE0.Child = SquareLPar1
			SquareLPar1.Next = SET_ITEMS2
			SET_ITEMS2.Next = SquareRPar3
			SquareRPar3.Next = RE_SIMPLE_RE4

			{
				newNfa := newNfaFromCharClass(SET_ITEMS2.Value.([256]bool))
				rightNfa := RE_SIMPLE_RE4.Value.(*Nfa)

				newNfa.Concatenate(*rightNfa)

				CONCATENATION_RE_SIMPLE_RE0.Value = &newNfa
			}
		case 61:
			RE_SIMPLE_RE0 := lhs
			SquareLPar1 := rhs[0]
			SET_ITEMS2 := rhs[1]
			SquareRPar3 := rhs[2]
			Plus4 := rhs[3]

			RE_SIMPLE_RE0.Child = SquareLPar1
			SquareLPar1.Next = SET_ITEMS2
			SET_ITEMS2.Next = SquareRPar3
			SquareRPar3.Next = Plus4

			{
				newNfa := newNfaFromCharClass(SET_ITEMS2.Value.([256]bool))
				newNfa.KleenePlus()

				RE_SIMPLE_RE0.Value = &newNfa
			}
		case 62:
			CONCATENATION_RE_SIMPLE_RE0 := lhs
			SquareLPar1 := rhs[0]
			SET_ITEMS2 := rhs[1]
			SquareRPar3 := rhs[2]
			Plus4 := rhs[3]
			CONCATENATION_RE_SIMPLE_RE5 := rhs[4]

			CONCATENATION_RE_SIMPLE_RE0.Child = SquareLPar1
			SquareLPar1.Next = SET_ITEMS2
			SET_ITEMS2.Next = SquareRPar3
			SquareRPar3.Next = Plus4
			Plus4.Next = CONCATENATION_RE_SIMPLE_RE5

			{
				newNfa := newNfaFromCharClass(SET_ITEMS2.Value.([256]bool))
				newNfa.KleenePlus()
				rightNfa := CONCATENATION_RE_SIMPLE_RE5.Value.(*Nfa)

				newNfa.Concatenate(*rightNfa)

				CONCATENATION_RE_SIMPLE_RE0.Value = &newNfa
			}
		case 63:
			CONCATENATION_RE_SIMPLE_RE0 := lhs
			SquareLPar1 := rhs[0]
			SET_ITEMS2 := rhs[1]
			SquareRPar3 := rhs[2]
			Plus4 := rhs[3]
			RE_SIMPLE_RE5 := rhs[4]

			CONCATENATION_RE_SIMPLE_RE0.Child = SquareLPar1
			SquareLPar1.Next = SET_ITEMS2
			SET_ITEMS2.Next = SquareRPar3
			SquareRPar3.Next = Plus4
			Plus4.Next = RE_SIMPLE_RE5

			{
				newNfa := newNfaFromCharClass(SET_ITEMS2.Value.([256]bool))
				newNfa.KleenePlus()
				rightNfa := RE_SIMPLE_RE5.Value.(*Nfa)

				newNfa.Concatenate(*rightNfa)

				CONCATENATION_RE_SIMPLE_RE0.Value = &newNfa
			}
		case 64:
			RE_SIMPLE_RE0 := lhs
			SquareLPar1 := rhs[0]
			SET_ITEMS2 := rhs[1]
			SquareRPar3 := rhs[2]
			Star4 := rhs[3]

			RE_SIMPLE_RE0.Child = SquareLPar1
			SquareLPar1.Next = SET_ITEMS2
			SET_ITEMS2.Next = SquareRPar3
			SquareRPar3.Next = Star4

			{
				newNfa := newNfaFromCharClass(SET_ITEMS2.Value.([256]bool))
				newNfa.KleeneStar()

				RE_SIMPLE_RE0.Value = &newNfa
			}
		case 65:
			CONCATENATION_RE_SIMPLE_RE0 := lhs
			SquareLPar1 := rhs[0]
			SET_ITEMS2 := rhs[1]
			SquareRPar3 := rhs[2]
			Star4 := rhs[3]
			CONCATENATION_RE_SIMPLE_RE5 := rhs[4]

			CONCATENATION_RE_SIMPLE_RE0.Child = SquareLPar1
			SquareLPar1.Next = SET_ITEMS2
			SET_ITEMS2.Next = SquareRPar3
			SquareRPar3.Next = Star4
			Star4.Next = CONCATENATION_RE_SIMPLE_RE5

			{
				newNfa := newNfaFromCharClass(SET_ITEMS2.Value.([256]bool))
				newNfa.KleeneStar()
				rightNfa := CONCATENATION_RE_SIMPLE_RE5.Value.(*Nfa)

				newNfa.Concatenate(*rightNfa)

				CONCATENATION_RE_SIMPLE_RE0.Value = &newNfa
			}
		case 66:
			CONCATENATION_RE_SIMPLE_RE0 := lhs
			SquareLPar1 := rhs[0]
			SET_ITEMS2 := rhs[1]
			SquareRPar3 := rhs[2]
			Star4 := rhs[3]
			RE_SIMPLE_RE5 := rhs[4]

			CONCATENATION_RE_SIMPLE_RE0.Child = SquareLPar1
			SquareLPar1.Next = SET_ITEMS2
			SET_ITEMS2.Next = SquareRPar3
			SquareRPar3.Next = Star4
			Star4.Next = RE_SIMPLE_RE5

			{
				newNfa := newNfaFromCharClass(SET_ITEMS2.Value.([256]bool))
				newNfa.KleeneStar()
				rightNfa := RE_SIMPLE_RE5.Value.(*Nfa)

				newNfa.Concatenate(*rightNfa)

				CONCATENATION_RE_SIMPLE_RE0.Value = &newNfa
			}
		case 67:
			RE_SIMPLE_RE0 := lhs
			SquareLPar1 := rhs[0]
			Caret2 := rhs[1]
			SET_ITEMS3 := rhs[2]
			SquareRPar4 := rhs[3]

			RE_SIMPLE_RE0.Child = SquareLPar1
			SquareLPar1.Next = Caret2
			Caret2.Next = SET_ITEMS3
			SET_ITEMS3.Next = SquareRPar4

			{
				chars := SET_ITEMS3.Value.([256]bool)

				//Skip the first Char (empty transition)
				for i := 1; i < len(chars); i++ {
					chars[i] = !chars[i]
				}

				newNfa := newNfaFromCharClass(chars)

				RE_SIMPLE_RE0.Value = &newNfa
			}
		case 68:
			CONCATENATION_RE_SIMPLE_RE0 := lhs
			SquareLPar1 := rhs[0]
			Caret2 := rhs[1]
			SET_ITEMS3 := rhs[2]
			SquareRPar4 := rhs[3]
			CONCATENATION_RE_SIMPLE_RE5 := rhs[4]

			CONCATENATION_RE_SIMPLE_RE0.Child = SquareLPar1
			SquareLPar1.Next = Caret2
			Caret2.Next = SET_ITEMS3
			SET_ITEMS3.Next = SquareRPar4
			SquareRPar4.Next = CONCATENATION_RE_SIMPLE_RE5

			{
				chars := SET_ITEMS3.Value.([256]bool)

				//Skip the first Char (empty transition)
				for i := 1; i < len(chars); i++ {
					chars[i] = !chars[i]
				}

				newNfa := newNfaFromCharClass(chars)
				rightNfa := CONCATENATION_RE_SIMPLE_RE5.Value.(*Nfa)

				newNfa.Concatenate(*rightNfa)

				CONCATENATION_RE_SIMPLE_RE0.Value = &newNfa
			}
		case 69:
			CONCATENATION_RE_SIMPLE_RE0 := lhs
			SquareLPar1 := rhs[0]
			Caret2 := rhs[1]
			SET_ITEMS3 := rhs[2]
			SquareRPar4 := rhs[3]
			RE_SIMPLE_RE5 := rhs[4]

			CONCATENATION_RE_SIMPLE_RE0.Child = SquareLPar1
			SquareLPar1.Next = Caret2
			Caret2.Next = SET_ITEMS3
			SET_ITEMS3.Next = SquareRPar4
			SquareRPar4.Next = RE_SIMPLE_RE5

			{
				chars := SET_ITEMS3.Value.([256]bool)

				//Skip the first Char (empty transition)
				for i := 1; i < len(chars); i++ {
					chars[i] = !chars[i]
				}

				newNfa := newNfaFromCharClass(chars)
				rightNfa := RE_SIMPLE_RE5.Value.(*Nfa)

				newNfa.Concatenate(*rightNfa)

				CONCATENATION_RE_SIMPLE_RE0.Value = &newNfa
			}
		case 70:
			RE_SIMPLE_RE0 := lhs
			SquareLPar1 := rhs[0]
			Caret2 := rhs[1]
			SET_ITEMS3 := rhs[2]
			SquareRPar4 := rhs[3]
			Plus5 := rhs[4]

			RE_SIMPLE_RE0.Child = SquareLPar1
			SquareLPar1.Next = Caret2
			Caret2.Next = SET_ITEMS3
			SET_ITEMS3.Next = SquareRPar4
			SquareRPar4.Next = Plus5

			{
				chars := SET_ITEMS3.Value.([256]bool)

				//Skip the first Char (empty transition)
				for i := 1; i < len(chars); i++ {
					chars[i] = !chars[i]
				}

				newNfa := newNfaFromCharClass(chars)

				newNfa.KleenePlus()

				RE_SIMPLE_RE0.Value = &newNfa
			}
		case 71:
			CONCATENATION_RE_SIMPLE_RE0 := lhs
			SquareLPar1 := rhs[0]
			Caret2 := rhs[1]
			SET_ITEMS3 := rhs[2]
			SquareRPar4 := rhs[3]
			Plus5 := rhs[4]
			CONCATENATION_RE_SIMPLE_RE6 := rhs[5]

			CONCATENATION_RE_SIMPLE_RE0.Child = SquareLPar1
			SquareLPar1.Next = Caret2
			Caret2.Next = SET_ITEMS3
			SET_ITEMS3.Next = SquareRPar4
			SquareRPar4.Next = Plus5
			Plus5.Next = CONCATENATION_RE_SIMPLE_RE6

			{
				chars := SET_ITEMS3.Value.([256]bool)

				//Skip the first Char (empty transition)
				for i := 1; i < len(chars); i++ {
					chars[i] = !chars[i]
				}

				newNfa := newNfaFromCharClass(chars)
				newNfa.KleenePlus()
				rightNfa := CONCATENATION_RE_SIMPLE_RE6.Value.(*Nfa)

				newNfa.Concatenate(*rightNfa)

				CONCATENATION_RE_SIMPLE_RE0.Value = &newNfa
			}
		case 72:
			CONCATENATION_RE_SIMPLE_RE0 := lhs
			SquareLPar1 := rhs[0]
			Caret2 := rhs[1]
			SET_ITEMS3 := rhs[2]
			SquareRPar4 := rhs[3]
			Plus5 := rhs[4]
			RE_SIMPLE_RE6 := rhs[5]

			CONCATENATION_RE_SIMPLE_RE0.Child = SquareLPar1
			SquareLPar1.Next = Caret2
			Caret2.Next = SET_ITEMS3
			SET_ITEMS3.Next = SquareRPar4
			SquareRPar4.Next = Plus5
			Plus5.Next = RE_SIMPLE_RE6

			{
				chars := SET_ITEMS3.Value.([256]bool)

				//Skip the first Char (empty transition)
				for i := 1; i < len(chars); i++ {
					chars[i] = !chars[i]
				}

				newNfa := newNfaFromCharClass(chars)
				newNfa.KleenePlus()
				rightNfa := RE_SIMPLE_RE6.Value.(*Nfa)

				newNfa.Concatenate(*rightNfa)

				CONCATENATION_RE_SIMPLE_RE0.Value = &newNfa
			}
		case 73:
			RE_SIMPLE_RE0 := lhs
			SquareLPar1 := rhs[0]
			Caret2 := rhs[1]
			SET_ITEMS3 := rhs[2]
			SquareRPar4 := rhs[3]
			Star5 := rhs[4]

			RE_SIMPLE_RE0.Child = SquareLPar1
			SquareLPar1.Next = Caret2
			Caret2.Next = SET_ITEMS3
			SET_ITEMS3.Next = SquareRPar4
			SquareRPar4.Next = Star5

			{
				chars := SET_ITEMS3.Value.([256]bool)

				//Skip the first Char (empty transition)
				for i := 1; i < len(chars); i++ {
					chars[i] = !chars[i]
				}

				newNfa := newNfaFromCharClass(chars)

				newNfa.KleeneStar()

				RE_SIMPLE_RE0.Value = &newNfa
			}
		case 74:
			CONCATENATION_RE_SIMPLE_RE0 := lhs
			SquareLPar1 := rhs[0]
			Caret2 := rhs[1]
			SET_ITEMS3 := rhs[2]
			SquareRPar4 := rhs[3]
			Star5 := rhs[4]
			CONCATENATION_RE_SIMPLE_RE6 := rhs[5]

			CONCATENATION_RE_SIMPLE_RE0.Child = SquareLPar1
			SquareLPar1.Next = Caret2
			Caret2.Next = SET_ITEMS3
			SET_ITEMS3.Next = SquareRPar4
			SquareRPar4.Next = Star5
			Star5.Next = CONCATENATION_RE_SIMPLE_RE6

			{
				chars := SET_ITEMS3.Value.([256]bool)

				//Skip the first Char (empty transition)
				for i := 1; i < len(chars); i++ {
					chars[i] = !chars[i]
				}

				newNfa := newNfaFromCharClass(chars)
				newNfa.KleeneStar()
				rightNfa := CONCATENATION_RE_SIMPLE_RE6.Value.(*Nfa)

				newNfa.Concatenate(*rightNfa)

				CONCATENATION_RE_SIMPLE_RE0.Value = &newNfa
			}
		case 75:
			CONCATENATION_RE_SIMPLE_RE0 := lhs
			SquareLPar1 := rhs[0]
			Caret2 := rhs[1]
			SET_ITEMS3 := rhs[2]
			SquareRPar4 := rhs[3]
			Star5 := rhs[4]
			RE_SIMPLE_RE6 := rhs[5]

			CONCATENATION_RE_SIMPLE_RE0.Child = SquareLPar1
			SquareLPar1.Next = Caret2
			Caret2.Next = SET_ITEMS3
			SET_ITEMS3.Next = SquareRPar4
			SquareRPar4.Next = Star5
			Star5.Next = RE_SIMPLE_RE6

			{
				chars := SET_ITEMS3.Value.([256]bool)

				//Skip the first Char (empty transition)
				for i := 1; i < len(chars); i++ {
					chars[i] = !chars[i]
				}

				newNfa := newNfaFromCharClass(chars)
				newNfa.KleeneStar()
				rightNfa := RE_SIMPLE_RE6.Value.(*Nfa)

				newNfa.Concatenate(*rightNfa)

				CONCATENATION_RE_SIMPLE_RE0.Value = &newNfa
			}
		}
	}

	parser := &gopapageno.Parser{
		Lexer:                     NewLexer(),
		NumTerminals:              numTerminals,
		NumNonterminals:           numNonTerminals,
		MaxRHSLength:              maxRHSLen,
		Rules:                     rules,
		CompressedRules:           compressedRules,
		PrecedenceMatrix:          precMatrix,
		BitPackedPrecedenceMatrix: bitPackedMatrix,
		Func:                      fn,
	}

	for _, opt := range opts {
		opt(parser)
	}

	return parser
}
