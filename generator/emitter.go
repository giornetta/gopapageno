package generator

import (
	"fmt"
	"os"
)

func emitFiles(outdir string) (*os.File, *os.File, error) {
	s, err := os.Stat(outdir)
	if err != nil {
		if os.IsNotExist(err) {
			if err = os.Mkdir(outdir, os.ModeDir); err != nil {
				return nil, nil, err
			}
		}

		return nil, nil, err
	}
	if !s.IsDir() {
		return nil, nil, fmt.Errorf("%s is not a directory", outdir)
	}

	packageName := s.Name()

	lname := "/lexer.pg.go"
	lfile, err := os.Create(outdir + lname)
	if err != nil {
		return nil, nil, err
	}

	fmt.Fprintf(lfile, "// Code generated by Gopapageno; DO NOT EDIT.\n")
	fmt.Fprintf(lfile, "package %s\n\n", packageName)
	fmt.Fprintf(lfile, "import \"github.com/giornetta/gopapageno\"\n\n")

	pname := "/parser.pg.go"
	pfile, err := os.Create(outdir + pname)
	if err != nil {
		return nil, nil, err
	}

	fmt.Fprintf(pfile, "// Code generated by Gopapageno; DO NOT EDIT.\n")
	fmt.Fprintf(pfile, "package %s\n\n", packageName)
	fmt.Fprintf(pfile, "import \"github.com/giornetta/gopapageno\"\n\n")

	return lfile, pfile, nil
}
